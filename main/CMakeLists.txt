INCLUDE_DIRECTORIES(
  ../src/gui
)

INCLUDE(${QT_USE_FILE})
ADD_DEFINITIONS(${QT_DEFINITIONS})

if (WIN32)
	ADD_EXECUTABLE(${PROJECT_NAME} WIN32 main.cpp  "${CMAKE_CURRENT_SOURCE_DIR}/Resources\\\\QSeriesHunter.rc")
elseif (APPLE)
	ADD_EXECUTABLE(${PROJECT_NAME} MACOSX_BUNDLE main.cpp)
endif (WIN32)

TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${QT_LIBRARIES} src)

INSTALL(TARGETS ${PROJECT_NAME} 
        BUNDLE DESTINATION . COMPONENT Runtime
        RUNTIME DESTINATION . COMPONENT Runtime) 

SET(DIRS ${QT_LIBRARY_DIR} ${LIBRARY_OUTPUT_PATH})

SET(CPACK_PACKAGE_VERSION_MAJOR "0")
SET(CPACK_PACKAGE_VERSION_MINOR "0")
SET(CPACK_PACKAGE_VERSION_PATCH "1")

if (WIN32)
	SET(GENERATOR "NSIS")
	SET(PROJECT_EXTENSION "exe")
	SET(CPACK_NSIS_MODIFY_PATH "ON")
	SET(CPACK_NSIS_DISPLAY_NAME ${PROJECT_NAME})
	SET(CPACK_PACKAGE_INSTALL_DIRECTORY ${PROJECT_NAME})
	SET(CPACK_NSIS_INSTALLED_ICON_NAME "${PROJECT_NAME}.${PROJECT_EXTENSION}")
	SET(CPACK_NSIS_HELP_LINK "https:\\\\\\\\github.com/docdoc/QSeriesHunter")
	SET(CPACK_NSIS_URL_INFO_ABOUT "https:\\\\\\\\github.com/docdoc/QSeriesHunter")
	SET(CPACK_NSIS_MUI_ICON "${CMAKE_CURRENT_SOURCE_DIR}/Resources\\\\QSeriesHunter.ico")
	SET(CPACK_NSIS_MUI_UNIICON "${CMAKE_CURRENT_SOURCE_DIR}/Resources\\\\QSeriesHunter.ico")
	SET(CPACK_NSIS_CREATE_ICONS "CreateShortCut '\$SMPROGRAMS\\\\$STARTMENU_FOLDER\\\\${PROJECT_NAME}.lnk' '\$INSTDIR\\\\${PROJECT_NAME}.exe'")
	LIST(APPEND DIRS "C:/Program Files/qjson/bin")
elseif (APPLE)
	SET(GENERATOR "DragNDrop")
	SET(PROJECT_EXTENSION "app")
    LIST(APPEND DIRS "/usr/local/lib")  
	#
	SET(MACOSX_BUNDLE_ICON_FILE "${CMAKE_CURRENT_SOURCE_DIR}/Resources/QSeriesHunter.icns")
	SET_SOURCE_FILES_PROPERTIES(${MACOSX_BUNDLE_ICON_FILE} PROPERTIES MACOSX_PACKAGE_LOCATION Resources)
	SET(CPACK_BINARY_DRAGNDROP ON)
endif (WIN32)

#SET(CPACK_PACKAGE_ICON  "${CMAKE_CURRENT_SOURCE_DIR}/Resources\\\\QSeriesHunter.ico")


INSTALL(CODE "include(BundleUtilities)
             fixup_bundle(\"\${CMAKE_INSTALL_PREFIX}/${PROJECT_NAME}.${PROJECT_EXTENSION}\"   \"\"   \"${DIRS}\")
			 " COMPONENT Runtime)

SET(CPACK_GENERATOR ${GENERATOR})

include(CPack)